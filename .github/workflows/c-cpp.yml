name: C/C++ CI

permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    # Cache submodules
    - name: Cache submodules
      uses: actions/cache@v3
      with:
        path: .git/modules
        key: ${{ runner.os }}-submodules-${{ hashFiles('.gitmodules') }}

    # Cache build artifacts
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-

    # Install necessary dependencies (if any)
    - name: Install dependencies
      run: brew install cmake

    # Configure CMake
    - name: Configure CMake
      run: cmake -B build

    # Build the project
    - name: Build Project
      run: cmake --build build --config Release

    # Create GitHub Release
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    # Upload the executable to the GitHub Release
    - name: Upload Executable to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/your_executable # Change to your actual executable path
        asset_name: your_executable         # Change to your actual executable name
        asset_content_type: application/octet-stream
